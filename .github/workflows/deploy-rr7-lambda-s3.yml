name: Deploy RR7 to aws lambda & s3

on:
   workflow_call:
      inputs:
         artifacts_name:
            description: 'Build artifacts name'
            required: false
            type: string
            default: ''
      secrets:
         AWS_ACCOUNT_ID:
            description: 'AWS Account ID'
            required: true
         AWS_DEFAULT_REGION:
            description: 'AWS Default Region'
            required: true
      outputs:
         deployment_result:
            description: 'Deployment result output'
            value: ${{ jobs.deploy.outputs.deployment_result }}
         url:
            description: 'Deployment URL'
            value: ${{ jobs.deploy.outputs.url }}
         cname:
            description: 'CNAME for DNS record'
            value: ${{ jobs.deploy.outputs.cname }}
   workflow_dispatch:

jobs:
   deploy:
      runs-on: ubuntu-latest
      outputs:
         deployment_result: ${{ steps.deploy.outputs.result }}
         url: ${{ steps.deploy.outputs.url }}
         cname: ${{ steps.deploy.outputs.cname }}
      steps:
         - name: Checkout repository
           uses: actions/checkout@v4

         - name: Download build artifacts
           if: ${{ inputs.artifacts_name != '' }}
           uses: actions/download-artifact@v4
           with:
              name: ${{ inputs.artifacts_name }}
              path: ./

         - name: Install pnpm
           uses: pnpm/action-setup@v4
           with:
              version: '9.5.0'
              run_install: false

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: '20.0.0'
              cache: 'pnpm'

         - name: Install dependencies
           run: pnpm i --frozen-lockfile

         - name: Pre-deployment checks
           run: |
              echo "🔍 Pre-deployment checks..."
              echo "Current directory: $(pwd)"
              echo "Available packages:"
              find . -name "package.json" -not -path "./node_modules/*" | head -10
              echo "Checking turbo configuration..."
              if [ -f "turbo.json" ]; then
                echo "✅ turbo.json found"
                grep -A 5 '"deploy"' turbo.json || echo "⚠️  No deploy task found in turbo.json"
              else
                echo "❌ turbo.json not found"
              fi
              echo "Checking for built web assets..."
              if [ -d "apps/web/build" ]; then
                echo "✅ Web build directory found"
                ls -la apps/web/build/
              else
                echo "⚠️  Web build directory not found, will build during deployment"
              fi

         - name: Deploy to AWS Lambda
           id: deploy
           env:
              AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
              AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
              CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
              CDK_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
              NODE_ENV: production
           run: |
              echo "🚀 Starting deployment..."
              echo "Environment variables:"
              echo "- AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:0:4}****"
              echo "- AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
              
              # Run deployment with detailed logging
              echo "📦 Running pnpm deploy..."
              set -x
              deployment_output=$(pnpm deploy 2>&1)
              deployment_status=$?
              set +x
              
              echo "📋 Deployment output:"
              echo "$deployment_output"
              
              echo "deployment_output<<EOF" >> $GITHUB_OUTPUT
              echo "$deployment_output" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
              
              # Extract URL if available in deployment output
              deployment_url=$(echo "$deployment_output" | grep -oE 'https?://[^[:space:]]+' | head -1 || echo "")
              echo "url=$deployment_url" >> $GITHUB_OUTPUT
              
              # Extract CNAME (domain without https://) if URL exists
              if [[ -n "$deployment_url" ]]; then
                cname_value=$(echo "$deployment_url" | sed 's|^https\?://||' | sed 's|/$||')
                echo "cname=$cname_value" >> $GITHUB_OUTPUT
                echo "🌐 Deployment URL: $deployment_url"
              else
                echo "cname=" >> $GITHUB_OUTPUT
                echo "⚠️  No deployment URL found in output"
              fi
              
              # Set result based on exit status
              if [ $deployment_status -eq 0 ]; then
                echo "result=success" >> $GITHUB_OUTPUT
                echo "✅ Deployment successful"
              else
                echo "result=failed" >> $GITHUB_OUTPUT
                echo "❌ Deployment failed with exit code: $deployment_status"
                echo "🔍 Troubleshooting info:"
                echo "- Check AWS credentials and permissions"
                echo "- Verify CDK bootstrap is completed"
                echo "- Check if all required packages have deploy scripts"
                exit $deployment_status
              fi