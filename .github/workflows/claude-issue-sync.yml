name: Claude Code Issue Sync

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  sync-issues:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Check for Claude Code markers
      id: check-markers
      run: |
        # 커밋 메시지에서 Claude Code 마커 확인
        if git log --oneline -1 | grep -q "🤖 Generated with \[Claude Code\]"; then
          echo "claude-generated=true" >> $GITHUB_OUTPUT
        else
          echo "claude-generated=false" >> $GITHUB_OUTPUT
        fi
        
        # 변경된 파일 확인
        echo "changed-files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')" >> $GITHUB_OUTPUT
        
    - name: Update related issues
      if: steps.check-markers.outputs.claude-generated == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Claude Code에 의해 생성된 커밋인 경우 관련 이슈 업데이트
        COMMIT_MSG=$(git log --oneline -1)
        CHANGED_FILES="${{ steps.check-markers.outputs.changed-files }}"
        
        # 활성 상태인 claude-code 라벨이 있는 이슈 찾기
        ACTIVE_ISSUES=$(gh issue list --label "claude-code" --state "open" --json number --jq '.[].number')
        
        for issue_num in $ACTIVE_ISSUES; do
          # 각 이슈에 진행 상황 코멘트 추가
          gh issue comment $issue_num --body "## 🔄 자동 업데이트 (GitHub Actions)
        
        **커밋**: $COMMIT_MSG
        **변경된 파일들**: $CHANGED_FILES
        **시간**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        이 업데이트는 GitHub Actions에 의해 자동으로 생성되었습니다."
        done
        
    - name: Auto-close completed issues
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 완료 키워드가 포함된 커밋 메시지 확인
        COMMIT_MSG=$(git log --oneline -1)
        
        if echo "$COMMIT_MSG" | grep -E -i "(완료|완성|finish|complete|done|resolve|fix)" > /dev/null; then
          # 활성 상태인 claude-code 라벨이 있는 이슈 찾기
          ACTIVE_ISSUES=$(gh issue list --label "claude-code" --state "open" --json number --jq '.[].number')
          
          for issue_num in $ACTIVE_ISSUES; do
            # 이슈 완료 처리
            gh issue comment $issue_num --body "## ✅ 자동 완료 처리
        
        **완료 커밋**: $COMMIT_MSG
        **완료 시간**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        커밋 메시지에 완료 키워드가 감지되어 자동으로 이슈를 완료 처리합니다."
        
            gh issue close $issue_num
            echo "이슈 #$issue_num 완료 처리됨"
          done
        fi